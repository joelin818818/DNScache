name: 构建DNS缓存工具 # MOD: Translated
run-name: 构建 ${{ github.ref_name }} for DNSCache

on:
  push:
    tags:
      - 'v*'  # 仅当推送匹配 v* (例如 v1.0.0) 的标签时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: 检出代码 # MOD: Translated
        uses: actions/checkout@v3

      - name: 设置Python环境 # MOD: Translated
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: 安装依赖 # MOD: Translated
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller # MOD: 已从Nuitka替换为PyInstaller

      # MOD: 已移除MinGW安装步骤，因为它是Nuitka特定的
      # - name: Install MinGW for Nuitka
      #  run: |
      #    choco install mingw -y

      - name: 根据日期生成版本号 # MOD: Translated
        id: generate_version
        run: |
          $date = Get-Date
          $version = "$($date.Year).$($date.Month.ToString('00')).$($date.Day.ToString('00')).$($date.Hour.ToString('00'))"
          echo "DATE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "Using version from date: $version"

      # MOD: 已将Nuitka构建步骤替换为PyInstaller构建步骤
      - name: 使用PyInstaller构建 # MOD: Translated
        run: |
          pyinstaller --onefile --windowed --name=DNSCacheGUI --distpath ./dist --workpath ./build --clean gui.py

      - name: 创建版本信息文件 # MOD: Translated
        run: |
          echo "版本: ${{ github.ref_name }}" > dist/version.txt
          echo "构建时间: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" >> dist/version.txt
          echo "GUI 构建版本: ${{ env.DATE_VERSION }}" >> dist/version.txt
          echo "提交: ${{ github.sha }}" >> dist/version.txt

      - name: 创建存档文件 # MOD: Translated
        run: |
          cd dist
          Compress-Archive -Path DNSCacheGUI.exe, version.txt -DestinationPath DNSCacheGUI_${{ github.ref_name }}.zip
          cd ..

      - name: 创建Release # MOD: Translated
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/DNSCacheGUI_${{ github.ref_name }}.zip
            dist/DNSCacheGUI.exe
          draft: false
          prerelease: false
          name: DNS 缓存工具 GUI ${{ github.ref_name }} # MOD: Translated
          body: |
            DNS 缓存工具 GUI ${{ github.ref_name }} 版本发布
            
            ## 下载
            - [Windows 应用程序包 (zip)](DNSCacheGUI_${{ github.ref_name }}.zip)
            - [Windows 可执行文件 (exe)](DNSCacheGUI.exe)
            
            ## 发布说明
            - GUI 应用程序 (构建版本: ${{ env.DATE_VERSION }})
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
